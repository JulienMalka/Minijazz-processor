regn<n>(i:[n]) = o:[n] where
    if n = 0 then
        o = []
    else
        o = reg(i[0]).regn<n-1>(i[1..])
    end if
end where

register_file(aa:[5], ab:[5], wa:[5], wren, wrdata:[32]) = (a:[32], b:[32], t0:[32]) where
    reg_1 = regn<32>(reg_1_next);
    reg_1_next = muxn<32>(wren and is_equal<5>(wa, [].0.0.0.0.1, 1), reg_1, wrdata);
    reg_2 = regn<32>(reg_2_next);
    reg_2_next = muxn<32>(wren and is_equal<5>(wa, [].0.0.0.1.0, 1), reg_2, wrdata);
    reg_3 = regn<32>(reg_3_next);
    reg_3_next = muxn<32>(wren and is_equal<5>(wa, [].0.0.0.1.1, 1), reg_3, wrdata);
    reg_4 = regn<32>(reg_4_next);
    reg_4_next = muxn<32>(wren and is_equal<5>(wa, [].0.0.1.0.0, 1), reg_4, wrdata);
    reg_5 = regn<32>(reg_5_next);
    reg_5_next = muxn<32>(wren and is_equal<5>(wa, [].0.0.1.0.1, 1), reg_5, wrdata);
    reg_6 = regn<32>(reg_6_next);
    reg_6_next = muxn<32>(wren and is_equal<5>(wa, [].0.0.1.1.0, 1), reg_6, wrdata);
    reg_7 = regn<32>(reg_7_next);
    reg_7_next = muxn<32>(wren and is_equal<5>(wa, [].0.0.1.1.1, 1), reg_7, wrdata);
    reg_8 = regn<32>(reg_8_next);
    reg_8_next = muxn<32>(wren and is_equal<5>(wa, [].0.1.0.0.0, 1), reg_8, wrdata);
    reg_9 = regn<32>(reg_9_next);
    reg_9_next = muxn<32>(wren and is_equal<5>(wa, [].0.1.0.0.1, 1), reg_9, wrdata);
    reg_10 = regn<32>(reg_10_next);
    reg_10_next = muxn<32>(wren and is_equal<5>(wa, [].0.1.0.1.0, 1), reg_10, wrdata);
    reg_11 = regn<32>(reg_11_next);
    reg_11_next = muxn<32>(wren and is_equal<5>(wa, [].0.1.0.1.1, 1), reg_11, wrdata);
    reg_12 = regn<32>(reg_12_next);
    reg_12_next = muxn<32>(wren and is_equal<5>(wa, [].0.1.1.0.0, 1), reg_12, wrdata);
    reg_13 = regn<32>(reg_13_next);
    reg_13_next = muxn<32>(wren and is_equal<5>(wa, [].0.1.1.0.1, 1), reg_13, wrdata);
    reg_14 = regn<32>(reg_14_next);
    reg_14_next = muxn<32>(wren and is_equal<5>(wa, [].0.1.1.1.0, 1), reg_14, wrdata);
    reg_15 = regn<32>(reg_15_next);
    reg_15_next = muxn<32>(wren and is_equal<5>(wa, [].0.1.1.1.1, 1), reg_15, wrdata);
    reg_16 = regn<32>(reg_16_next);
    reg_16_next = muxn<32>(wren and is_equal<5>(wa, [].1.0.0.0.0, 1), reg_16, wrdata);
    reg_17 = regn<32>(reg_17_next);
    reg_17_next = muxn<32>(wren and is_equal<5>(wa, [].1.0.0.0.1, 1), reg_17, wrdata);
    reg_18 = regn<32>(reg_18_next);
    reg_18_next = muxn<32>(wren and is_equal<5>(wa, [].1.0.0.1.0, 1), reg_18, wrdata);
    reg_19 = regn<32>(reg_19_next);
    reg_19_next = muxn<32>(wren and is_equal<5>(wa, [].1.0.0.1.1, 1), reg_19, wrdata);
    reg_20 = regn<32>(reg_20_next);
    reg_20_next = muxn<32>(wren and is_equal<5>(wa, [].1.0.1.0.0, 1), reg_20, wrdata);
    reg_21 = regn<32>(reg_21_next);
    reg_21_next = muxn<32>(wren and is_equal<5>(wa, [].1.0.1.0.1, 1), reg_21, wrdata);
    reg_22 = regn<32>(reg_22_next);
    reg_22_next = muxn<32>(wren and is_equal<5>(wa, [].1.0.1.1.0, 1), reg_22, wrdata);
    reg_23 = regn<32>(reg_23_next);
    reg_23_next = muxn<32>(wren and is_equal<5>(wa, [].1.0.1.1.1, 1), reg_23, wrdata);
    reg_24 = regn<32>(reg_24_next);
    reg_24_next = muxn<32>(wren and is_equal<5>(wa, [].1.1.0.0.0, 1), reg_24, wrdata);
    reg_25 = regn<32>(reg_25_next);
    reg_25_next = muxn<32>(wren and is_equal<5>(wa, [].1.1.0.0.1, 1), reg_25, wrdata);
    reg_26 = regn<32>(reg_26_next);
    reg_26_next = muxn<32>(wren and is_equal<5>(wa, [].1.1.0.1.0, 1), reg_26, wrdata);
    reg_27 = regn<32>(reg_27_next);
    reg_27_next = muxn<32>(wren and is_equal<5>(wa, [].1.1.0.1.1, 1), reg_27, wrdata);
    reg_28 = regn<32>(reg_28_next);
    reg_28_next = muxn<32>(wren and is_equal<5>(wa, [].1.1.1.0.0, 1), reg_28, wrdata);
    reg_29 = regn<32>(reg_29_next);
    reg_29_next = muxn<32>(wren and is_equal<5>(wa, [].1.1.1.0.1, 1), reg_29, wrdata);
    reg_30 = regn<32>(reg_30_next);
    reg_30_next = muxn<32>(wren and is_equal<5>(wa, [].1.1.1.1.0, 1), reg_30, wrdata);
    reg_31 = regn<32>(reg_31_next);
    reg_31_next = muxn<32>(wren and is_equal<5>(wa, [].1.1.1.1.1, 1), reg_31, wrdata);
    zero = clone_bit<32>(0);
    a = mux5bit<32>(zero, reg_1, reg_2, reg_3, reg_4, reg_5, reg_6, reg_7, reg_8, reg_9, reg_10, reg_11, reg_12, reg_13, reg_14, reg_15, reg_16, reg_17, reg_18, reg_19, reg_20, reg_21, reg_22, reg_23, reg_24, reg_25, reg_26, reg_27, reg_28, reg_29, reg_30, reg_31, aa);
    b = mux5bit<32>(zero, reg_1, reg_2, reg_3, reg_4, reg_5, reg_6, reg_7, reg_8, reg_9, reg_10, reg_11, reg_12, reg_13, reg_14, reg_15, reg_16, reg_17, reg_18, reg_19, reg_20, reg_21, reg_22, reg_23, reg_24, reg_25, reg_26, reg_27, reg_28, reg_29, reg_30, reg_31, ab);
    t0 = reg_8_next;
end where

instruction_register(enable, D:[32]) = Q:[32] where
    Q = regn<32>(ir_next);
    ir_next = muxn<32>(enable, Q, D);
end where

